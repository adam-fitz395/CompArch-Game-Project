00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 08/02/2023 15:42:35

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  START:                  ; first instruction of program
00001000                             9  
00001000                            10  
00001000                            11  * Player Health
00001000  =00004000                 12  SANITY EQU $4000
00001000                            13  
00001000                            14  *
00001000                            15  
00001000                            16  * Key Inputs
00001000  =00000025                 17  LEFT_ARROW EQU $25
00001000  =00000026                 18  UP_ARROW EQU $26
00001000  =00000027                 19  RIGHT_ARROW EQU $27
00001000  =00000028                 20  DOWN_ARROW EQU $28
00001000                            21  
00001000                            22  * Character Setup
00001000  =00003000                 23  PLAYER_X EQU $3000
00001000  =00003010                 24  PLAYER_Y EQU $3010
00001000  =00003100                 25  ENEMY_X EQU $3100
00001000  =00003110                 26  ENEMY_Y EQU $3110
00001000                            27  
00001000                            28  * INPUT
00001000                            29  *     CLR.L   D1                      ; Clear Data Register
00001000                            30  *     MOVE.B  #19,        D0          ; Listen for Keys
00001000                            31  *     TRAP    #15                     ; Trap (Perform action)
00001000                            32  *     MOVE.B  D1,         D2          ; Move last key D1 to D2
00001000                            33  *     CMP.B   #0,         D2          ; Key is pressed
00001000                            34  *     BEQ     PROCESS_INPUT           ; Process Key
00001000                            35  *     TRAP    #15                     ; Trap for Last Key
00001000                            36  *     ; Check if key still pressed
00001000                            37  *     CMP.B   #$FF,       D1          ; Is it still pressed
00001000                            38  *     BEQ     PROCESS_INPUT           ; Process Last Key
00001000                            39  *     RTS                             ; Return to subroutine
00001000                            40  
00001000                            41  ;Game boot dialogue start
00001000                            42  
00001000                            43  * :GAME_BOOT
00001000                            44  *         LEA within_WAV, A1 *Load first line into A1
00001000                            45  *         MOVE.B #0,D1
00001000                            46  *         MOVE.B #71, D0
00001000                            47  *         TRAP #15
00001000                            48          
00001000                            49  *         MOVE    #0,D1 *Play line 1
00001000                            50  *         MOVE    #72,D0
00001000                            51  *         TRAP    #15
00001000                            52          
00001000                            53  *         MOVE.L #$00FFFFFF, D1 *Set text colour
00001000                            54  *         MOVE.L #$06090000,D2 *Set font, size, etc
00001000                            55  *         MOVE.B #21, D0
00001000                            56  *         TRAP #15
00001000                            57          
00001000                            58  *         LEA fear,A1
00001000                            59  *         MOVE.W #60, D1
00001000                            60  *         MOVE.W #100, D2
00001000                            61  *         MOVE.B #95, D0
00001000                            62  *         TRAP #15
00001000                            63          
00001000                            64          
00001000                            65  *         move.l   #450,D1     ; delay in 1/100th of seconds
00001000                            66  *         moveq    #23,D0
00001000                            67  *         trap     #15
00001000                            68          
00001000                            69  *         LEA eldritch_WAV, A1 *Load line 2 into A1
00001000                            70  *         MOVE.B #1,D1
00001000                            71  *         MOVE.B #71, D0
00001000                            72  *         TRAP #15
00001000                            73          
00001000                            74  *         MOVE.B    #1,D1 *Play line 2
00001000                            75  *         MOVE.B    #72,D0
00001000                            76  *         TRAP    #15
00001000                            77  
00001000                            78  *         LEA eldritch,A1
00001000                            79  *         MOVE.W #60, D1
00001000                            80  *         MOVE.W #120, D2
00001000                            81  *         MOVE.B #95, D0
00001000                            82  *         TRAP #15
00001000                            83          
00001000                            84  *         move.l   #400,D1
00001000                            85  *         moveq    #23,D0
00001000                            86  *         trap     #15
00001000                            87          
00001000                            88  *         LEA reckon_WAV, A1 *Load line 3 into A1
00001000                            89  *         MOVE.B #1,D1
00001000                            90  *         MOVE.B #71, D0
00001000                            91  *         TRAP #15
00001000                            92          
00001000                            93  *         MOVE.B    #1,D1 *Play line 3
00001000                            94  *         MOVE.B    #72,D0
00001000                            95  *         TRAP    #15
00001000                            96          
00001000                            97  *         LEA how,A1
00001000                            98  *         MOVE.W #60, D1
00001000                            99  *         MOVE.W #140, D2
00001000                           100  *         MOVE.B #95, D0
00001000                           101  *         TRAP #15
00001000                           102          
00001000                           103  *         move.l   #400,D1
00001000                           104  *         moveq    #23,D0
00001000                           105  *         trap     #15
00001000                           106          
00001000                           107  *         LEA find_WAV, A1 *Load line 4 into A1
00001000                           108  *         MOVE.B #2,D1
00001000                           109  *         MOVE.B #71, D0
00001000                           110  *         TRAP #15
00001000                           111          
00001000                           112  *         MOVE.B    #2,D1 *Play line 4
00001000                           113  *         MOVE.B    #72,D0
00001000                           114  *         TRAP    #15
00001000                           115          
00001000                           116  *         MOVE.L #$00080888, D1
00001000                           117  *         MOVE.L #$06090000,D2
00001000                           118  *         MOVE.B #21, D0
00001000                           119  *         TRAP #15
00001000                           120          
00001000                           121  *         LEA let,A1
00001000                           122  *         MOVE.W #60, D1
00001000                           123  *         MOVE.W #250, D2
00001000                           124  *         MOVE.B #95, D0
00001000                           125  *         TRAP #15
00001000                           126          
00001000                           127  *         move.l   #250,D1
00001000                           128  *         moveq    #23,D0
00001000                           129  *         trap     #15
00001000                           130          
00001000                           131  *         MOVE.W #$FF00, D1
00001000                           132  *         MOVE.B #11, D0
00001000                           133  *         TRAP #15
00001000                           134          
00001000                           135  INITIALIZE
00001000  11FC 0064 4000           136      MOVE.B #100,(SANITY)
00001006  43F8 4000                137      LEA $4000, A1
0000100A  1611                     138      MOVE.B (A1), D3
0000100C                           139  
0000100C                           140  
0000100C                           141  GAME_LOOP
0000100C                           142      IF D3 <EQ> #0 THEN
00001014  4EF9 00001022            143      JMP GAME_END
0000101A                           144      ENDI
0000101A  0403 000A                145      SUB.B #10,D3
0000101E  4EF8 100C                146      JMP GAME_LOOP
00001022                           147  
00001022                           148  GAME_END
00001022                           149  
00001022                           150          
00001022                           151          
00001022                           152  ;end of game boot dialogue
00001022                           153          
00001022                           154          
00001022                           155  
00001022                           156      
00001022                           157  
00001022  FFFF FFFF                158      SIMHALT             ; halt simulator
00001026                           159  
00001026                           160  * Put variables and constants here
00001026= 57 65 20 66 65 61 ...    161  fear dc.b 'We fear not the darkness itself, but what lies within.',0
0000105D= 45 6C 64 72 69 74 ...    162  eldritch dc.b 'Eldritch horrors beyond human comprehension.',0
0000108A= 48 6F 77 20 6C 6F ...    163  how dc.b 'How long do you reckon you can outrun them?',0
000010B6= 4C 65 74 20 75 73 ...    164  let dc.b 'Let us find out......',0
000010CC= 73 6F 75 6E 64 73 ...    165  menu_WAV dc.b 'sounds/menu.wav', 0
000010DC= 73 6F 75 6E 64 73 ...    166  within_WAV dc.b 'sounds/within.wav', 0
000010EE= 73 6F 75 6E 64 73 ...    167  eldritch_WAV dc.b 'sounds/eldritch.wav',0
00001102= 73 6F 75 6E 64 73 ...    168  reckon_WAV dc.b 'sounds/reckon.wav',0
00001114= 73 6F 75 6E 64 73 ...    169  find_WAV dc.b 'sounds/find.wav',0
00001124                           170  
00001124                           171      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
DOWN_ARROW          28
ELDRITCH            105D
ELDRITCH_WAV        10EE
ENEMY_X             3100
ENEMY_Y             3110
FEAR                1026
FIND_WAV            1114
GAME_END            1022
GAME_LOOP           100C
HOW                 108A
INITIALIZE          1000
LEFT_ARROW          25
LET                 10B6
MENU_WAV            10CC
PLAYER_X            3000
PLAYER_Y            3010
RECKON_WAV          1102
RIGHT_ARROW         27
SANITY              4000
START               1000
UP_ARROW            26
WITHIN_WAV          10DC
_00000000           101A
